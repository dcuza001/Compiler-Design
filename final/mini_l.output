Terminals which are not used

   VAR
   END


Grammar

    0 $accept: prog_start $end

    1 prog_start: PROGRAM IDENT SEMICOLON block END_PROGRAM
    2           | error

    3 comp: EQ
    4     | NEQ
    5     | LT
    6     | GT
    7     | LTE
    8     | GTE

    9 begin_program: BEGIN_PROGRAM
   10              | error

   11 block: declaration SEMICOLON block2

   12 block2: declaration SEMICOLON block2
   13       | begin_program statement SEMICOLON statement1

   14 declaration: ident declaration1

   15 declaration1: COMMA ident declaration1
   16             | COLON declaration2

   17 declaration2: INTEGER
   18             | ARRAY L_PAREN NUMBER R_PAREN OF INTEGER

   19 ident: IDENT

   20 statement: var ASSIGN expression
   21          | IF bool_exp then statement SEMICOLON statement1 else_state endif
   22          | while bool_exp beginloop statement SEMICOLON statement1 endloop
   23          | do BEGINLOOP statement SEMICOLON statement1 endloop WHILE bool_exp
   24          | READ var var1
   25          | WRITE var var1
   26          | CONTINUE

   27 while: WHILE

   28 beginloop: BEGINLOOP

   29 endloop: ENDLOOP

   30 statement1: statement SEMICOLON statement1
   31           | /* empty */

   32 else_state: else statement SEMICOLON statement1
   33           | /* empty */

   34 var1: COMMA var var1
   35     | /* empty */

   36 then: THEN

   37 endif: ENDIF

   38 else: ELSE

   39 do: DO

   40 bool_exp: relation_and_exp bool_exp1

   41 bool_exp1: OR relation_and_exp bool_exp1
   42          | /* empty */

   43 relation_and_exp: relation_exp relation_and_exp1

   44 relation_and_exp1: AND relation_exp relation_and_exp1
   45                  | /* empty */

   46 relation_exp: expression comp expression
   47             | TRUE
   48             | NOT TRUE
   49             | FALSE
   50             | NOT FALSE
   51             | L_PAREN bool_exp R_PAREN
   52             | NOT L_PAREN bool_exp R_PAREN
   53             | NOT expression comp expression

   54 expression: multiplicative_exp expression1

   55 expression1: /* empty */
   56            | ADD multiplicative_exp expression1
   57            | SUB multiplicative_exp expression1

   58 multiplicative_exp: term multiplicative_exp1

   59 multiplicative_exp1: MULT term multiplicative_exp1
   60                    | DIV term multiplicative_exp1
   61                    | MOD term multiplicative_exp1
   62                    | /* empty */

   63 term: var
   64     | SUB var
   65     | NUMBER
   66     | SUB number
   67     | L_PAREN expression R_PAREN
   68     | SUB L_PAREN expression R_PAREN

   69 number: NUMBER
   70       | error

   71 var: ident_err
   72    | ident_err l_paren expression R_PAREN

   73 l_paren: L_PAREN

   74 ident_err: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256) 2 10 70
IDENT (258) 1 19 74
VAR (259)
NUMBER (260) 18 65 69
INTEGER (261) 17 18
END (262)
FALSE (263) 49 50
TRUE (264) 47 48
NOT (265) 48 50 52 53
OR (266) 41
AND (267) 44
WRITE (268) 25
READ (269) 24
CONTINUE (270) 26
ENDLOOP (271) 29
BEGINLOOP (272) 23 28
DO (273) 39
WHILE (274) 23 27
ELSE (275) 38
ENDIF (276) 37
THEN (277) 36
IF (278) 21
OF (279) 18
ARRAY (280) 18
END_PROGRAM (281) 1
BEGIN_PROGRAM (282) 9
PROGRAM (283) 1
R_PAREN (284) 18 51 52 67 68 72
L_PAREN (285) 18 51 52 67 68 73
ASSIGN (286) 20
COMMA (287) 15 34
COLON (288) 16
SEMICOLON (289) 1 11 12 13 21 22 23 30 32
GTE (290) 8
LTE (291) 7
GT (292) 6
LT (293) 5
NEQ (294) 4
EQ (295) 3
MOD (296) 61
SUB (297) 57 64 66 68
ADD (298) 56
DIV (299) 60
MULT (300) 59


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
prog_start (47)
    on left: 1 2, on right: 0
comp (48)
    on left: 3 4 5 6 7 8, on right: 46 53
begin_program (49)
    on left: 9 10, on right: 13
block (50)
    on left: 11, on right: 1
block2 (51)
    on left: 12 13, on right: 11 12
declaration (52)
    on left: 14, on right: 11 12
declaration1 (53)
    on left: 15 16, on right: 14 15
declaration2 (54)
    on left: 17 18, on right: 16
ident (55)
    on left: 19, on right: 14 15
statement (56)
    on left: 20 21 22 23 24 25 26, on right: 13 21 22 23 30 32
while (57)
    on left: 27, on right: 22
beginloop (58)
    on left: 28, on right: 22
endloop (59)
    on left: 29, on right: 22 23
statement1 (60)
    on left: 30 31, on right: 13 21 22 23 30 32
else_state (61)
    on left: 32 33, on right: 21
var1 (62)
    on left: 34 35, on right: 24 25 34
then (63)
    on left: 36, on right: 21
endif (64)
    on left: 37, on right: 21
else (65)
    on left: 38, on right: 32
do (66)
    on left: 39, on right: 23
bool_exp (67)
    on left: 40, on right: 21 22 23 51 52
bool_exp1 (68)
    on left: 41 42, on right: 40 41
relation_and_exp (69)
    on left: 43, on right: 40 41
relation_and_exp1 (70)
    on left: 44 45, on right: 43 44
relation_exp (71)
    on left: 46 47 48 49 50 51 52 53, on right: 43 44
expression (72)
    on left: 54, on right: 20 46 53 67 68 72
expression1 (73)
    on left: 55 56 57, on right: 54 56 57
multiplicative_exp (74)
    on left: 58, on right: 54 56 57
multiplicative_exp1 (75)
    on left: 59 60 61 62, on right: 58 59 60 61
term (76)
    on left: 63 64 65 66 67 68, on right: 58 59 60 61
number (77)
    on left: 69 70, on right: 66
var (78)
    on left: 71 72, on right: 20 24 25 34 63 64
l_paren (79)
    on left: 73, on right: 72
ident_err (80)
    on left: 74, on right: 71 72


state 0

    0 $accept: . prog_start $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    prog_start  go to state 3


state 1

    2 prog_start: error .

    $default  reduce using rule 2 (prog_start)


state 2

    1 prog_start: PROGRAM . IDENT SEMICOLON block END_PROGRAM

    IDENT  shift, and go to state 4


state 3

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


state 4

    1 prog_start: PROGRAM IDENT . SEMICOLON block END_PROGRAM

    SEMICOLON  shift, and go to state 6


state 5

    0 $accept: prog_start $end .

    $default  accept


state 6

    1 prog_start: PROGRAM IDENT SEMICOLON . block END_PROGRAM

    IDENT  shift, and go to state 7

    block        go to state 8
    declaration  go to state 9
    ident        go to state 10


state 7

   19 ident: IDENT .

    $default  reduce using rule 19 (ident)


state 8

    1 prog_start: PROGRAM IDENT SEMICOLON block . END_PROGRAM

    END_PROGRAM  shift, and go to state 11


state 9

   11 block: declaration . SEMICOLON block2

    SEMICOLON  shift, and go to state 12


state 10

   14 declaration: ident . declaration1

    COMMA  shift, and go to state 13
    COLON  shift, and go to state 14

    declaration1  go to state 15


state 11

    1 prog_start: PROGRAM IDENT SEMICOLON block END_PROGRAM .

    $default  reduce using rule 1 (prog_start)


state 12

   11 block: declaration SEMICOLON . block2

    error          shift, and go to state 16
    IDENT          shift, and go to state 7
    BEGIN_PROGRAM  shift, and go to state 17

    begin_program  go to state 18
    block2         go to state 19
    declaration    go to state 20
    ident          go to state 10


state 13

   15 declaration1: COMMA . ident declaration1

    IDENT  shift, and go to state 7

    ident  go to state 21


state 14

   16 declaration1: COLON . declaration2

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23

    declaration2  go to state 24


state 15

   14 declaration: ident declaration1 .

    $default  reduce using rule 14 (declaration)


state 16

   10 begin_program: error .

    $default  reduce using rule 10 (begin_program)


state 17

    9 begin_program: BEGIN_PROGRAM .

    $default  reduce using rule 9 (begin_program)


state 18

   13 block2: begin_program . statement SEMICOLON statement1

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    statement  go to state 32
    while      go to state 33
    do         go to state 34
    var        go to state 35
    ident_err  go to state 36


state 19

   11 block: declaration SEMICOLON block2 .

    $default  reduce using rule 11 (block)


state 20

   12 block2: declaration . SEMICOLON block2

    SEMICOLON  shift, and go to state 37


state 21

   15 declaration1: COMMA ident . declaration1

    COMMA  shift, and go to state 13
    COLON  shift, and go to state 14

    declaration1  go to state 38


state 22

   17 declaration2: INTEGER .

    $default  reduce using rule 17 (declaration2)


state 23

   18 declaration2: ARRAY . L_PAREN NUMBER R_PAREN OF INTEGER

    L_PAREN  shift, and go to state 39


state 24

   16 declaration1: COLON declaration2 .

    $default  reduce using rule 16 (declaration1)


state 25

   74 ident_err: IDENT .

    $default  reduce using rule 74 (ident_err)


state 26

   25 statement: WRITE . var var1

    IDENT  shift, and go to state 25

    var        go to state 40
    ident_err  go to state 36


state 27

   24 statement: READ . var var1

    IDENT  shift, and go to state 25

    var        go to state 41
    ident_err  go to state 36


state 28

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


state 29

   39 do: DO .

    $default  reduce using rule 39 (do)


state 30

   27 while: WHILE .

    $default  reduce using rule 27 (while)


state 31

   21 statement: IF . bool_exp then statement SEMICOLON statement1 else_state endif

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 43
    TRUE     shift, and go to state 44
    NOT      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47

    bool_exp            go to state 48
    relation_and_exp    go to state 49
    relation_exp        go to state 50
    expression          go to state 51
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 32

   13 block2: begin_program statement . SEMICOLON statement1

    SEMICOLON  shift, and go to state 55


state 33

   22 statement: while . bool_exp beginloop statement SEMICOLON statement1 endloop

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 43
    TRUE     shift, and go to state 44
    NOT      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47

    bool_exp            go to state 56
    relation_and_exp    go to state 49
    relation_exp        go to state 50
    expression          go to state 51
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 34

   23 statement: do . BEGINLOOP statement SEMICOLON statement1 endloop WHILE bool_exp

    BEGINLOOP  shift, and go to state 57


state 35

   20 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 58


state 36

   71 var: ident_err .
   72    | ident_err . l_paren expression R_PAREN

    L_PAREN  shift, and go to state 59

    $default  reduce using rule 71 (var)

    l_paren  go to state 60


state 37

   12 block2: declaration SEMICOLON . block2

    error          shift, and go to state 16
    IDENT          shift, and go to state 7
    BEGIN_PROGRAM  shift, and go to state 17

    begin_program  go to state 18
    block2         go to state 61
    declaration    go to state 20
    ident          go to state 10


state 38

   15 declaration1: COMMA ident declaration1 .

    $default  reduce using rule 15 (declaration1)


state 39

   18 declaration2: ARRAY L_PAREN . NUMBER R_PAREN OF INTEGER

    NUMBER  shift, and go to state 62


state 40

   25 statement: WRITE var . var1

    COMMA  shift, and go to state 63

    $default  reduce using rule 35 (var1)

    var1  go to state 64


state 41

   24 statement: READ var . var1

    COMMA  shift, and go to state 63

    $default  reduce using rule 35 (var1)

    var1  go to state 65


state 42

   65 term: NUMBER .

    $default  reduce using rule 65 (term)


state 43

   49 relation_exp: FALSE .

    $default  reduce using rule 49 (relation_exp)


state 44

   47 relation_exp: TRUE .

    $default  reduce using rule 47 (relation_exp)


state 45

   48 relation_exp: NOT . TRUE
   50             | NOT . FALSE
   52             | NOT . L_PAREN bool_exp R_PAREN
   53             | NOT . expression comp expression

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 66
    TRUE     shift, and go to state 67
    L_PAREN  shift, and go to state 68
    SUB      shift, and go to state 47

    expression          go to state 69
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 46

   51 relation_exp: L_PAREN . bool_exp R_PAREN
   67 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 43
    TRUE     shift, and go to state 44
    NOT      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47

    bool_exp            go to state 70
    relation_and_exp    go to state 49
    relation_exp        go to state 50
    expression          go to state 71
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 47

   64 term: SUB . var
   66     | SUB . number
   68     | SUB . L_PAREN expression R_PAREN

    error    shift, and go to state 72
    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 73
    L_PAREN  shift, and go to state 74

    number     go to state 75
    var        go to state 76
    ident_err  go to state 36


state 48

   21 statement: IF bool_exp . then statement SEMICOLON statement1 else_state endif

    THEN  shift, and go to state 77

    then  go to state 78


state 49

   40 bool_exp: relation_and_exp . bool_exp1

    OR  shift, and go to state 79

    $default  reduce using rule 42 (bool_exp1)

    bool_exp1  go to state 80


state 50

   43 relation_and_exp: relation_exp . relation_and_exp1

    AND  shift, and go to state 81

    $default  reduce using rule 45 (relation_and_exp1)

    relation_and_exp1  go to state 82


state 51

   46 relation_exp: expression . comp expression

    GTE  shift, and go to state 83
    LTE  shift, and go to state 84
    GT   shift, and go to state 85
    LT   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88

    comp  go to state 89


state 52

   54 expression: multiplicative_exp . expression1

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 55 (expression1)

    expression1  go to state 92


state 53

   58 multiplicative_exp: term . multiplicative_exp1

    MOD   shift, and go to state 93
    DIV   shift, and go to state 94
    MULT  shift, and go to state 95

    $default  reduce using rule 62 (multiplicative_exp1)

    multiplicative_exp1  go to state 96


state 54

   63 term: var .

    $default  reduce using rule 63 (term)


state 55

   13 block2: begin_program statement SEMICOLON . statement1

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    $default  reduce using rule 31 (statement1)

    statement   go to state 97
    while       go to state 33
    statement1  go to state 98
    do          go to state 34
    var         go to state 35
    ident_err   go to state 36


state 56

   22 statement: while bool_exp . beginloop statement SEMICOLON statement1 endloop

    BEGINLOOP  shift, and go to state 99

    beginloop  go to state 100


state 57

   23 statement: do BEGINLOOP . statement SEMICOLON statement1 endloop WHILE bool_exp

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    statement  go to state 101
    while      go to state 33
    do         go to state 34
    var        go to state 35
    ident_err  go to state 36


state 58

   20 statement: var ASSIGN . expression

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    expression          go to state 103
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 59

   73 l_paren: L_PAREN .

    $default  reduce using rule 73 (l_paren)


state 60

   72 var: ident_err l_paren . expression R_PAREN

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    expression          go to state 104
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 61

   12 block2: declaration SEMICOLON block2 .

    $default  reduce using rule 12 (block2)


state 62

   18 declaration2: ARRAY L_PAREN NUMBER . R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 105


state 63

   34 var1: COMMA . var var1

    IDENT  shift, and go to state 25

    var        go to state 106
    ident_err  go to state 36


state 64

   25 statement: WRITE var var1 .

    $default  reduce using rule 25 (statement)


state 65

   24 statement: READ var var1 .

    $default  reduce using rule 24 (statement)


state 66

   50 relation_exp: NOT FALSE .

    $default  reduce using rule 50 (relation_exp)


state 67

   48 relation_exp: NOT TRUE .

    $default  reduce using rule 48 (relation_exp)


state 68

   52 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   67 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 43
    TRUE     shift, and go to state 44
    NOT      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47

    bool_exp            go to state 107
    relation_and_exp    go to state 49
    relation_exp        go to state 50
    expression          go to state 71
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 69

   53 relation_exp: NOT expression . comp expression

    GTE  shift, and go to state 83
    LTE  shift, and go to state 84
    GT   shift, and go to state 85
    LT   shift, and go to state 86
    NEQ  shift, and go to state 87
    EQ   shift, and go to state 88

    comp  go to state 108


state 70

   51 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 109


state 71

   46 relation_exp: expression . comp expression
   67 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110
    GTE      shift, and go to state 83
    LTE      shift, and go to state 84
    GT       shift, and go to state 85
    LT       shift, and go to state 86
    NEQ      shift, and go to state 87
    EQ       shift, and go to state 88

    comp  go to state 89


state 72

   70 number: error .

    $default  reduce using rule 70 (number)


state 73

   69 number: NUMBER .

    $default  reduce using rule 69 (number)


state 74

   68 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    expression          go to state 111
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 75

   66 term: SUB number .

    $default  reduce using rule 66 (term)


state 76

   64 term: SUB var .

    $default  reduce using rule 64 (term)


state 77

   36 then: THEN .

    $default  reduce using rule 36 (then)


state 78

   21 statement: IF bool_exp then . statement SEMICOLON statement1 else_state endif

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    statement  go to state 112
    while      go to state 33
    do         go to state 34
    var        go to state 35
    ident_err  go to state 36


state 79

   41 bool_exp1: OR . relation_and_exp bool_exp1

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 43
    TRUE     shift, and go to state 44
    NOT      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47

    relation_and_exp    go to state 113
    relation_exp        go to state 50
    expression          go to state 51
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 80

   40 bool_exp: relation_and_exp bool_exp1 .

    $default  reduce using rule 40 (bool_exp)


state 81

   44 relation_and_exp1: AND . relation_exp relation_and_exp1

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 43
    TRUE     shift, and go to state 44
    NOT      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47

    relation_exp        go to state 114
    expression          go to state 51
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 82

   43 relation_and_exp: relation_exp relation_and_exp1 .

    $default  reduce using rule 43 (relation_and_exp)


state 83

    8 comp: GTE .

    $default  reduce using rule 8 (comp)


state 84

    7 comp: LTE .

    $default  reduce using rule 7 (comp)


state 85

    6 comp: GT .

    $default  reduce using rule 6 (comp)


state 86

    5 comp: LT .

    $default  reduce using rule 5 (comp)


state 87

    4 comp: NEQ .

    $default  reduce using rule 4 (comp)


state 88

    3 comp: EQ .

    $default  reduce using rule 3 (comp)


state 89

   46 relation_exp: expression comp . expression

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    expression          go to state 115
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 90

   57 expression1: SUB . multiplicative_exp expression1

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    multiplicative_exp  go to state 116
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 91

   56 expression1: ADD . multiplicative_exp expression1

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    multiplicative_exp  go to state 117
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 92

   54 expression: multiplicative_exp expression1 .

    $default  reduce using rule 54 (expression)


state 93

   61 multiplicative_exp1: MOD . term multiplicative_exp1

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    term       go to state 118
    var        go to state 54
    ident_err  go to state 36


state 94

   60 multiplicative_exp1: DIV . term multiplicative_exp1

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    term       go to state 119
    var        go to state 54
    ident_err  go to state 36


state 95

   59 multiplicative_exp1: MULT . term multiplicative_exp1

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    term       go to state 120
    var        go to state 54
    ident_err  go to state 36


state 96

   58 multiplicative_exp: term multiplicative_exp1 .

    $default  reduce using rule 58 (multiplicative_exp)


state 97

   30 statement1: statement . SEMICOLON statement1

    SEMICOLON  shift, and go to state 121


state 98

   13 block2: begin_program statement SEMICOLON statement1 .

    $default  reduce using rule 13 (block2)


state 99

   28 beginloop: BEGINLOOP .

    $default  reduce using rule 28 (beginloop)


state 100

   22 statement: while bool_exp beginloop . statement SEMICOLON statement1 endloop

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    statement  go to state 122
    while      go to state 33
    do         go to state 34
    var        go to state 35
    ident_err  go to state 36


state 101

   23 statement: do BEGINLOOP statement . SEMICOLON statement1 endloop WHILE bool_exp

    SEMICOLON  shift, and go to state 123


state 102

   67 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    expression          go to state 124
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 103

   20 statement: var ASSIGN expression .

    $default  reduce using rule 20 (statement)


state 104

   72 var: ident_err l_paren expression . R_PAREN

    R_PAREN  shift, and go to state 125


state 105

   18 declaration2: ARRAY L_PAREN NUMBER R_PAREN . OF INTEGER

    OF  shift, and go to state 126


state 106

   34 var1: COMMA var . var1

    COMMA  shift, and go to state 63

    $default  reduce using rule 35 (var1)

    var1  go to state 127


state 107

   52 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 128


state 108

   53 relation_exp: NOT expression comp . expression

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 102
    SUB      shift, and go to state 47

    expression          go to state 129
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 109

   51 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 51 (relation_exp)


state 110

   67 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 67 (term)


state 111

   68 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 130


state 112

   21 statement: IF bool_exp then statement . SEMICOLON statement1 else_state endif

    SEMICOLON  shift, and go to state 131


state 113

   41 bool_exp1: OR relation_and_exp . bool_exp1

    OR  shift, and go to state 79

    $default  reduce using rule 42 (bool_exp1)

    bool_exp1  go to state 132


state 114

   44 relation_and_exp1: AND relation_exp . relation_and_exp1

    AND  shift, and go to state 81

    $default  reduce using rule 45 (relation_and_exp1)

    relation_and_exp1  go to state 133


state 115

   46 relation_exp: expression comp expression .

    $default  reduce using rule 46 (relation_exp)


state 116

   57 expression1: SUB multiplicative_exp . expression1

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 55 (expression1)

    expression1  go to state 134


state 117

   56 expression1: ADD multiplicative_exp . expression1

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 55 (expression1)

    expression1  go to state 135


state 118

   61 multiplicative_exp1: MOD term . multiplicative_exp1

    MOD   shift, and go to state 93
    DIV   shift, and go to state 94
    MULT  shift, and go to state 95

    $default  reduce using rule 62 (multiplicative_exp1)

    multiplicative_exp1  go to state 136


state 119

   60 multiplicative_exp1: DIV term . multiplicative_exp1

    MOD   shift, and go to state 93
    DIV   shift, and go to state 94
    MULT  shift, and go to state 95

    $default  reduce using rule 62 (multiplicative_exp1)

    multiplicative_exp1  go to state 137


state 120

   59 multiplicative_exp1: MULT term . multiplicative_exp1

    MOD   shift, and go to state 93
    DIV   shift, and go to state 94
    MULT  shift, and go to state 95

    $default  reduce using rule 62 (multiplicative_exp1)

    multiplicative_exp1  go to state 138


state 121

   30 statement1: statement SEMICOLON . statement1

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    $default  reduce using rule 31 (statement1)

    statement   go to state 97
    while       go to state 33
    statement1  go to state 139
    do          go to state 34
    var         go to state 35
    ident_err   go to state 36


state 122

   22 statement: while bool_exp beginloop statement . SEMICOLON statement1 endloop

    SEMICOLON  shift, and go to state 140


state 123

   23 statement: do BEGINLOOP statement SEMICOLON . statement1 endloop WHILE bool_exp

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    $default  reduce using rule 31 (statement1)

    statement   go to state 97
    while       go to state 33
    statement1  go to state 141
    do          go to state 34
    var         go to state 35
    ident_err   go to state 36


state 124

   67 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


state 125

   72 var: ident_err l_paren expression R_PAREN .

    $default  reduce using rule 72 (var)


state 126

   18 declaration2: ARRAY L_PAREN NUMBER R_PAREN OF . INTEGER

    INTEGER  shift, and go to state 142


state 127

   34 var1: COMMA var var1 .

    $default  reduce using rule 34 (var1)


state 128

   52 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 52 (relation_exp)


state 129

   53 relation_exp: NOT expression comp expression .

    $default  reduce using rule 53 (relation_exp)


state 130

   68 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 68 (term)


state 131

   21 statement: IF bool_exp then statement SEMICOLON . statement1 else_state endif

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    $default  reduce using rule 31 (statement1)

    statement   go to state 97
    while       go to state 33
    statement1  go to state 143
    do          go to state 34
    var         go to state 35
    ident_err   go to state 36


state 132

   41 bool_exp1: OR relation_and_exp bool_exp1 .

    $default  reduce using rule 41 (bool_exp1)


state 133

   44 relation_and_exp1: AND relation_exp relation_and_exp1 .

    $default  reduce using rule 44 (relation_and_exp1)


state 134

   57 expression1: SUB multiplicative_exp expression1 .

    $default  reduce using rule 57 (expression1)


state 135

   56 expression1: ADD multiplicative_exp expression1 .

    $default  reduce using rule 56 (expression1)


state 136

   61 multiplicative_exp1: MOD term multiplicative_exp1 .

    $default  reduce using rule 61 (multiplicative_exp1)


state 137

   60 multiplicative_exp1: DIV term multiplicative_exp1 .

    $default  reduce using rule 60 (multiplicative_exp1)


state 138

   59 multiplicative_exp1: MULT term multiplicative_exp1 .

    $default  reduce using rule 59 (multiplicative_exp1)


state 139

   30 statement1: statement SEMICOLON statement1 .

    $default  reduce using rule 30 (statement1)


state 140

   22 statement: while bool_exp beginloop statement SEMICOLON . statement1 endloop

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    $default  reduce using rule 31 (statement1)

    statement   go to state 97
    while       go to state 33
    statement1  go to state 144
    do          go to state 34
    var         go to state 35
    ident_err   go to state 36


state 141

   23 statement: do BEGINLOOP statement SEMICOLON statement1 . endloop WHILE bool_exp

    ENDLOOP  shift, and go to state 145

    endloop  go to state 146


state 142

   18 declaration2: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER .

    $default  reduce using rule 18 (declaration2)


state 143

   21 statement: IF bool_exp then statement SEMICOLON statement1 . else_state endif

    ELSE  shift, and go to state 147

    $default  reduce using rule 33 (else_state)

    else_state  go to state 148
    else        go to state 149


state 144

   22 statement: while bool_exp beginloop statement SEMICOLON statement1 . endloop

    ENDLOOP  shift, and go to state 145

    endloop  go to state 150


state 145

   29 endloop: ENDLOOP .

    $default  reduce using rule 29 (endloop)


state 146

   23 statement: do BEGINLOOP statement SEMICOLON statement1 endloop . WHILE bool_exp

    WHILE  shift, and go to state 151


state 147

   38 else: ELSE .

    $default  reduce using rule 38 (else)


state 148

   21 statement: IF bool_exp then statement SEMICOLON statement1 else_state . endif

    ENDIF  shift, and go to state 152

    endif  go to state 153


state 149

   32 else_state: else . statement SEMICOLON statement1

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    statement  go to state 154
    while      go to state 33
    do         go to state 34
    var        go to state 35
    ident_err  go to state 36


state 150

   22 statement: while bool_exp beginloop statement SEMICOLON statement1 endloop .

    $default  reduce using rule 22 (statement)


state 151

   23 statement: do BEGINLOOP statement SEMICOLON statement1 endloop WHILE . bool_exp

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 42
    FALSE    shift, and go to state 43
    TRUE     shift, and go to state 44
    NOT      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47

    bool_exp            go to state 155
    relation_and_exp    go to state 49
    relation_exp        go to state 50
    expression          go to state 51
    multiplicative_exp  go to state 52
    term                go to state 53
    var                 go to state 54
    ident_err           go to state 36


state 152

   37 endif: ENDIF .

    $default  reduce using rule 37 (endif)


state 153

   21 statement: IF bool_exp then statement SEMICOLON statement1 else_state endif .

    $default  reduce using rule 21 (statement)


state 154

   32 else_state: else statement . SEMICOLON statement1

    SEMICOLON  shift, and go to state 156


state 155

   23 statement: do BEGINLOOP statement SEMICOLON statement1 endloop WHILE bool_exp .

    $default  reduce using rule 23 (statement)


state 156

   32 else_state: else statement SEMICOLON . statement1

    IDENT     shift, and go to state 25
    WRITE     shift, and go to state 26
    READ      shift, and go to state 27
    CONTINUE  shift, and go to state 28
    DO        shift, and go to state 29
    WHILE     shift, and go to state 30
    IF        shift, and go to state 31

    $default  reduce using rule 31 (statement1)

    statement   go to state 97
    while       go to state 33
    statement1  go to state 157
    do          go to state 34
    var         go to state 35
    ident_err   go to state 36


state 157

   32 else_state: else statement SEMICOLON statement1 .

    $default  reduce using rule 32 (else_state)
