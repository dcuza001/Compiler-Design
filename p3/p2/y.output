Terminals which are not used

   VAR
   END
   UMINUS


Grammar

    0 $accept: prog_start $end

    1 prog_start: program ident semicolon block end_program
    2           | error

    3 program: PROGRAM
    4        | error

    5 ident: IDENT

    6 add: ADD

    7 sub: SUB

    8 mult: MULT

    9 div: DIV

   10 mod: MOD

   11 comp: EQ
   12     | NEQ
   13     | LTE
   14     | GTE
   15     | LT
   16     | GT

   17 semicolon: SEMICOLON
   18          | error

   19 colon: COLON
   20      | error

   21 comma: COMMA

   22 assign: ASSIGN

   23 l_paren: L_PAREN

   24 r_paren: R_PAREN

   25 begin_program: BEGIN_PROGRAM
   26              | error

   27 end_program: END_PROGRAM
   28            | error

   29 integer: INTEGER
   30        | error

   31 number: NUMBER
   32       | error

   33 array: ARRAY

   34 of: OF

   35 if: IF

   36 then: THEN

   37 endif: ENDIF

   38 and: AND

   39 or: OR

   40 not: NOT

   41 true: TRUE

   42 false: FALSE

   43 while: WHILE

   44 do: DO

   45 continue: CONTINUE

   46 beginloop: BEGINLOOP

   47 endloop: ENDLOOP

   48 read: READ

   49 write: WRITE

   50 else: ELSE

   51 block: dec semicolon block2

   52 block2: dec semicolon block2
   53       | begin_program statement semicolon statement1

   54 statement: var assign expression
   55          | if bool_exp then statement semicolon statement1 if_p endif
   56          | while bool_exp beginloop statement semicolon statement1 endloop
   57          | do beginloop statement semicolon statement1 endloop while bool_exp
   58          | read var var_p
   59          | write var var_p
   60          | continue

   61 statement1: statement semicolon statement1
   62           | /* empty */

   63 dec: ident dec1

   64 dec1: comma ident dec1
   65     | colon dec2

   66 dec2: integer
   67     | array l_paren number r_paren of integer

   68 if_p: else statement semicolon statement1
   69     | /* empty */

   70 var_p: comma var var_p
   71      | /* empty */

   72 var: ident
   73    | ident l_paren expression r_paren

   74 multiplicative_exp: term multiplicative_exp1

   75 multiplicative_exp1: mult term multiplicative_exp1
   76                    | div term multiplicative_exp1
   77                    | mod term multiplicative_exp1
   78                    | /* empty */

   79 relation_n_exp: relation_exp relation_n_exp1

   80 relation_n_exp1: and relation_exp relation_n_exp1
   81                | /* empty */

   82 relation_exp: not relation_exp1
   83             | relation_exp1

   84 relation_exp1: expression comp expression
   85              | true
   86              | false
   87              | l_paren bool_exp r_paren

   88 expression: multiplicative_exp expression1

   89 expression1: /* empty */
   90            | add multiplicative_exp expression1
   91            | sub multiplicative_exp expression1

   92 term: var
   93     | number
   94     | l_paren expression r_paren
   95     | term1

   96 term1: sub term

   97 bool_exp: relation_n_exp bool_exp1

   98 bool_exp1: or relation_n_exp bool_exp1
   99          | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256) 2 4 18 20 26 28 30 32
IDENT (258) 5
VAR (259)
NUMBER (260) 31
INTEGER (261) 29
END (262)
GTE (263) 14
LTE (264) 13
GT (265) 16
LT (266) 15
NEQ (267) 12
EQ (268) 11
MOD (269) 10
SUB (270) 7
ADD (271) 6
DIV (272) 9
MULT (273) 8
FALSE (274) 42
TRUE (275) 41
NOT (276) 40
OR (277) 39
AND (278) 38
WRITE (279) 49
READ (280) 48
CONTINUE (281) 45
ENDLOOP (282) 47
BEGINLOOP (283) 46
DO (284) 44
WHILE (285) 43
ELSE (286) 50
ENDIF (287) 37
THEN (288) 36
IF (289) 35
OF (290) 34
ARRAY (291) 33
ASSIGN (292) 22
COMMA (293) 21
COLON (294) 19
SEMICOLON (295) 17
L_PAREN (296) 23
R_PAREN (297) 24
END_PROGRAM (298) 27
BEGIN_PROGRAM (299) 25
PROGRAM (300) 3
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
prog_start (48)
    on left: 1 2, on right: 0
program (49)
    on left: 3 4, on right: 1
ident (50)
    on left: 5, on right: 1 63 64 72 73
add (51)
    on left: 6, on right: 90
sub (52)
    on left: 7, on right: 91 96
mult (53)
    on left: 8, on right: 75
div (54)
    on left: 9, on right: 76
mod (55)
    on left: 10, on right: 77
comp (56)
    on left: 11 12 13 14 15 16, on right: 84
semicolon (57)
    on left: 17 18, on right: 1 51 52 53 55 56 57 61 68
colon (58)
    on left: 19 20, on right: 65
comma (59)
    on left: 21, on right: 64 70
assign (60)
    on left: 22, on right: 54
l_paren (61)
    on left: 23, on right: 67 73 87 94
r_paren (62)
    on left: 24, on right: 67 73 87 94
begin_program (63)
    on left: 25 26, on right: 53
end_program (64)
    on left: 27 28, on right: 1
integer (65)
    on left: 29 30, on right: 66 67
number (66)
    on left: 31 32, on right: 67 93
array (67)
    on left: 33, on right: 67
of (68)
    on left: 34, on right: 67
if (69)
    on left: 35, on right: 55
then (70)
    on left: 36, on right: 55
endif (71)
    on left: 37, on right: 55
and (72)
    on left: 38, on right: 80
or (73)
    on left: 39, on right: 98
not (74)
    on left: 40, on right: 82
true (75)
    on left: 41, on right: 85
false (76)
    on left: 42, on right: 86
while (77)
    on left: 43, on right: 56 57
do (78)
    on left: 44, on right: 57
continue (79)
    on left: 45, on right: 60
beginloop (80)
    on left: 46, on right: 56 57
endloop (81)
    on left: 47, on right: 56 57
read (82)
    on left: 48, on right: 58
write (83)
    on left: 49, on right: 59
else (84)
    on left: 50, on right: 68
block (85)
    on left: 51, on right: 1
block2 (86)
    on left: 52 53, on right: 51 52
statement (87)
    on left: 54 55 56 57 58 59 60, on right: 53 55 56 57 61 68
statement1 (88)
    on left: 61 62, on right: 53 55 56 57 61 68
dec (89)
    on left: 63, on right: 51 52
dec1 (90)
    on left: 64 65, on right: 63 64
dec2 (91)
    on left: 66 67, on right: 65
if_p (92)
    on left: 68 69, on right: 55
var_p (93)
    on left: 70 71, on right: 58 59 70
var (94)
    on left: 72 73, on right: 54 58 59 70 92
multiplicative_exp (95)
    on left: 74, on right: 88 90 91
multiplicative_exp1 (96)
    on left: 75 76 77 78, on right: 74 75 76 77
relation_n_exp (97)
    on left: 79, on right: 97 98
relation_n_exp1 (98)
    on left: 80 81, on right: 79 80
relation_exp (99)
    on left: 82 83, on right: 79 80
relation_exp1 (100)
    on left: 84 85 86 87, on right: 82 83
expression (101)
    on left: 88, on right: 54 73 84 94
expression1 (102)
    on left: 89 90 91, on right: 88 90 91
term (103)
    on left: 92 93 94 95, on right: 74 75 76 77 96
term1 (104)
    on left: 96, on right: 95
bool_exp (105)
    on left: 97, on right: 55 56 57 87
bool_exp1 (106)
    on left: 98 99, on right: 97 98


state 0

    0 $accept: . prog_start $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    prog_start  go to state 3
    program     go to state 4


state 1

    2 prog_start: error .
    4 program: error .

    IDENT     reduce using rule 4 (program)
    $default  reduce using rule 2 (prog_start)


state 2

    3 program: PROGRAM .

    $default  reduce using rule 3 (program)


state 3

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


state 4

    1 prog_start: program . ident semicolon block end_program

    IDENT  shift, and go to state 6

    ident  go to state 7


state 5

    0 $accept: prog_start $end .

    $default  accept


state 6

    5 ident: IDENT .

    $default  reduce using rule 5 (ident)


state 7

    1 prog_start: program ident . semicolon block end_program

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 10


state 8

   18 semicolon: error .

    $default  reduce using rule 18 (semicolon)


state 9

   17 semicolon: SEMICOLON .

    $default  reduce using rule 17 (semicolon)


state 10

    1 prog_start: program ident semicolon . block end_program

    IDENT  shift, and go to state 6

    ident  go to state 11
    block  go to state 12
    dec    go to state 13


state 11

   63 dec: ident . dec1

    error  shift, and go to state 14
    COMMA  shift, and go to state 15
    COLON  shift, and go to state 16

    colon  go to state 17
    comma  go to state 18
    dec1   go to state 19


state 12

    1 prog_start: program ident semicolon block . end_program

    error        shift, and go to state 20
    END_PROGRAM  shift, and go to state 21

    end_program  go to state 22


state 13

   51 block: dec . semicolon block2

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 23


state 14

   20 colon: error .

    $default  reduce using rule 20 (colon)


state 15

   21 comma: COMMA .

    $default  reduce using rule 21 (comma)


state 16

   19 colon: COLON .

    $default  reduce using rule 19 (colon)


state 17

   65 dec1: colon . dec2

    error    shift, and go to state 24
    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26

    integer  go to state 27
    array    go to state 28
    dec2     go to state 29


state 18

   64 dec1: comma . ident dec1

    IDENT  shift, and go to state 6

    ident  go to state 30


state 19

   63 dec: ident dec1 .

    $default  reduce using rule 63 (dec)


state 20

   28 end_program: error .

    $default  reduce using rule 28 (end_program)


state 21

   27 end_program: END_PROGRAM .

    $default  reduce using rule 27 (end_program)


state 22

    1 prog_start: program ident semicolon block end_program .

    $default  reduce using rule 1 (prog_start)


state 23

   51 block: dec semicolon . block2

    error          shift, and go to state 31
    IDENT          shift, and go to state 6
    BEGIN_PROGRAM  shift, and go to state 32

    ident          go to state 11
    begin_program  go to state 33
    block2         go to state 34
    dec            go to state 35


state 24

   30 integer: error .

    $default  reduce using rule 30 (integer)


state 25

   29 integer: INTEGER .

    $default  reduce using rule 29 (integer)


state 26

   33 array: ARRAY .

    $default  reduce using rule 33 (array)


state 27

   66 dec2: integer .

    $default  reduce using rule 66 (dec2)


state 28

   67 dec2: array . l_paren number r_paren of integer

    L_PAREN  shift, and go to state 36

    l_paren  go to state 37


state 29

   65 dec1: colon dec2 .

    $default  reduce using rule 65 (dec1)


state 30

   64 dec1: comma ident . dec1

    error  shift, and go to state 14
    COMMA  shift, and go to state 15
    COLON  shift, and go to state 16

    colon  go to state 17
    comma  go to state 18
    dec1   go to state 38


state 31

   26 begin_program: error .

    $default  reduce using rule 26 (begin_program)


state 32

   25 begin_program: BEGIN_PROGRAM .

    $default  reduce using rule 25 (begin_program)


state 33

   53 block2: begin_program . statement semicolon statement1

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    ident      go to state 45
    if         go to state 46
    while      go to state 47
    do         go to state 48
    continue   go to state 49
    read       go to state 50
    write      go to state 51
    statement  go to state 52
    var        go to state 53


state 34

   51 block: dec semicolon block2 .

    $default  reduce using rule 51 (block)


state 35

   52 block2: dec . semicolon block2

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 54


state 36

   23 l_paren: L_PAREN .

    $default  reduce using rule 23 (l_paren)


state 37

   67 dec2: array l_paren . number r_paren of integer

    error   shift, and go to state 55
    NUMBER  shift, and go to state 56

    number  go to state 57


state 38

   64 dec1: comma ident dec1 .

    $default  reduce using rule 64 (dec1)


state 39

   49 write: WRITE .

    $default  reduce using rule 49 (write)


state 40

   48 read: READ .

    $default  reduce using rule 48 (read)


state 41

   45 continue: CONTINUE .

    $default  reduce using rule 45 (continue)


state 42

   44 do: DO .

    $default  reduce using rule 44 (do)


state 43

   43 while: WHILE .

    $default  reduce using rule 43 (while)


state 44

   35 if: IF .

    $default  reduce using rule 35 (if)


state 45

   72 var: ident .
   73    | ident . l_paren expression r_paren

    L_PAREN  shift, and go to state 36

    $default  reduce using rule 72 (var)

    l_paren  go to state 58


state 46

   55 statement: if . bool_exp then statement semicolon statement1 if_p endif

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    FALSE    shift, and go to state 60
    TRUE     shift, and go to state 61
    NOT      shift, and go to state 62
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 64
    number              go to state 65
    not                 go to state 66
    true                go to state 67
    false               go to state 68
    var                 go to state 69
    multiplicative_exp  go to state 70
    relation_n_exp      go to state 71
    relation_exp        go to state 72
    relation_exp1       go to state 73
    expression          go to state 74
    term                go to state 75
    term1               go to state 76
    bool_exp            go to state 77


state 47

   56 statement: while . bool_exp beginloop statement semicolon statement1 endloop

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    FALSE    shift, and go to state 60
    TRUE     shift, and go to state 61
    NOT      shift, and go to state 62
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 64
    number              go to state 65
    not                 go to state 66
    true                go to state 67
    false               go to state 68
    var                 go to state 69
    multiplicative_exp  go to state 70
    relation_n_exp      go to state 71
    relation_exp        go to state 72
    relation_exp1       go to state 73
    expression          go to state 74
    term                go to state 75
    term1               go to state 76
    bool_exp            go to state 78


state 48

   57 statement: do . beginloop statement semicolon statement1 endloop while bool_exp

    BEGINLOOP  shift, and go to state 79

    beginloop  go to state 80


state 49

   60 statement: continue .

    $default  reduce using rule 60 (statement)


state 50

   58 statement: read . var var_p

    IDENT  shift, and go to state 6

    ident  go to state 45
    var    go to state 81


state 51

   59 statement: write . var var_p

    IDENT  shift, and go to state 6

    ident  go to state 45
    var    go to state 82


state 52

   53 block2: begin_program statement . semicolon statement1

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 83


state 53

   54 statement: var . assign expression

    ASSIGN  shift, and go to state 84

    assign  go to state 85


state 54

   52 block2: dec semicolon . block2

    error          shift, and go to state 31
    IDENT          shift, and go to state 6
    BEGIN_PROGRAM  shift, and go to state 32

    ident          go to state 11
    begin_program  go to state 33
    block2         go to state 86
    dec            go to state 35


state 55

   32 number: error .

    $default  reduce using rule 32 (number)


state 56

   31 number: NUMBER .

    $default  reduce using rule 31 (number)


state 57

   67 dec2: array l_paren number . r_paren of integer

    R_PAREN  shift, and go to state 87

    r_paren  go to state 88


state 58

   73 var: ident l_paren . expression r_paren

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 89
    number              go to state 65
    var                 go to state 69
    multiplicative_exp  go to state 70
    expression          go to state 90
    term                go to state 75
    term1               go to state 76


state 59

    7 sub: SUB .

    $default  reduce using rule 7 (sub)


state 60

   42 false: FALSE .

    $default  reduce using rule 42 (false)


state 61

   41 true: TRUE .

    $default  reduce using rule 41 (true)


state 62

   40 not: NOT .

    $default  reduce using rule 40 (not)


state 63

   96 term1: sub . term

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident    go to state 45
    sub      go to state 63
    l_paren  go to state 89
    number   go to state 65
    var      go to state 69
    term     go to state 91
    term1    go to state 76


state 64

   87 relation_exp1: l_paren . bool_exp r_paren
   94 term: l_paren . expression r_paren

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    FALSE    shift, and go to state 60
    TRUE     shift, and go to state 61
    NOT      shift, and go to state 62
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 64
    number              go to state 65
    not                 go to state 66
    true                go to state 67
    false               go to state 68
    var                 go to state 69
    multiplicative_exp  go to state 70
    relation_n_exp      go to state 71
    relation_exp        go to state 72
    relation_exp1       go to state 73
    expression          go to state 92
    term                go to state 75
    term1               go to state 76
    bool_exp            go to state 93


state 65

   93 term: number .

    $default  reduce using rule 93 (term)


state 66

   82 relation_exp: not . relation_exp1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    FALSE    shift, and go to state 60
    TRUE     shift, and go to state 61
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 64
    number              go to state 65
    true                go to state 67
    false               go to state 68
    var                 go to state 69
    multiplicative_exp  go to state 70
    relation_exp1       go to state 94
    expression          go to state 74
    term                go to state 75
    term1               go to state 76


state 67

   85 relation_exp1: true .

    $default  reduce using rule 85 (relation_exp1)


state 68

   86 relation_exp1: false .

    $default  reduce using rule 86 (relation_exp1)


state 69

   92 term: var .

    $default  reduce using rule 92 (term)


state 70

   88 expression: multiplicative_exp . expression1

    SUB  shift, and go to state 59
    ADD  shift, and go to state 95

    $default  reduce using rule 89 (expression1)

    add          go to state 96
    sub          go to state 97
    expression1  go to state 98


state 71

   97 bool_exp: relation_n_exp . bool_exp1

    OR  shift, and go to state 99

    $default  reduce using rule 99 (bool_exp1)

    or         go to state 100
    bool_exp1  go to state 101


state 72

   79 relation_n_exp: relation_exp . relation_n_exp1

    AND  shift, and go to state 102

    $default  reduce using rule 81 (relation_n_exp1)

    and              go to state 103
    relation_n_exp1  go to state 104


state 73

   83 relation_exp: relation_exp1 .

    $default  reduce using rule 83 (relation_exp)


state 74

   84 relation_exp1: expression . comp expression

    GTE  shift, and go to state 105
    LTE  shift, and go to state 106
    GT   shift, and go to state 107
    LT   shift, and go to state 108
    NEQ  shift, and go to state 109
    EQ   shift, and go to state 110

    comp  go to state 111


state 75

   74 multiplicative_exp: term . multiplicative_exp1

    MOD   shift, and go to state 112
    DIV   shift, and go to state 113
    MULT  shift, and go to state 114

    $default  reduce using rule 78 (multiplicative_exp1)

    mult                 go to state 115
    div                  go to state 116
    mod                  go to state 117
    multiplicative_exp1  go to state 118


state 76

   95 term: term1 .

    $default  reduce using rule 95 (term)


state 77

   55 statement: if bool_exp . then statement semicolon statement1 if_p endif

    THEN  shift, and go to state 119

    then  go to state 120


state 78

   56 statement: while bool_exp . beginloop statement semicolon statement1 endloop

    BEGINLOOP  shift, and go to state 79

    beginloop  go to state 121


state 79

   46 beginloop: BEGINLOOP .

    $default  reduce using rule 46 (beginloop)


state 80

   57 statement: do beginloop . statement semicolon statement1 endloop while bool_exp

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    ident      go to state 45
    if         go to state 46
    while      go to state 47
    do         go to state 48
    continue   go to state 49
    read       go to state 50
    write      go to state 51
    statement  go to state 122
    var        go to state 53


state 81

   58 statement: read var . var_p

    COMMA  shift, and go to state 15

    $default  reduce using rule 71 (var_p)

    comma  go to state 123
    var_p  go to state 124


state 82

   59 statement: write var . var_p

    COMMA  shift, and go to state 15

    $default  reduce using rule 71 (var_p)

    comma  go to state 123
    var_p  go to state 125


state 83

   53 block2: begin_program statement semicolon . statement1

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    $default  reduce using rule 62 (statement1)

    ident       go to state 45
    if          go to state 46
    while       go to state 47
    do          go to state 48
    continue    go to state 49
    read        go to state 50
    write       go to state 51
    statement   go to state 126
    statement1  go to state 127
    var         go to state 53


state 84

   22 assign: ASSIGN .

    $default  reduce using rule 22 (assign)


state 85

   54 statement: var assign . expression

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 89
    number              go to state 65
    var                 go to state 69
    multiplicative_exp  go to state 70
    expression          go to state 128
    term                go to state 75
    term1               go to state 76


state 86

   52 block2: dec semicolon block2 .

    $default  reduce using rule 52 (block2)


state 87

   24 r_paren: R_PAREN .

    $default  reduce using rule 24 (r_paren)


state 88

   67 dec2: array l_paren number r_paren . of integer

    OF  shift, and go to state 129

    of  go to state 130


state 89

   94 term: l_paren . expression r_paren

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 89
    number              go to state 65
    var                 go to state 69
    multiplicative_exp  go to state 70
    expression          go to state 131
    term                go to state 75
    term1               go to state 76


state 90

   73 var: ident l_paren expression . r_paren

    R_PAREN  shift, and go to state 87

    r_paren  go to state 132


state 91

   96 term1: sub term .

    $default  reduce using rule 96 (term1)


state 92

   84 relation_exp1: expression . comp expression
   94 term: l_paren expression . r_paren

    GTE      shift, and go to state 105
    LTE      shift, and go to state 106
    GT       shift, and go to state 107
    LT       shift, and go to state 108
    NEQ      shift, and go to state 109
    EQ       shift, and go to state 110
    R_PAREN  shift, and go to state 87

    comp     go to state 111
    r_paren  go to state 133


state 93

   87 relation_exp1: l_paren bool_exp . r_paren

    R_PAREN  shift, and go to state 87

    r_paren  go to state 134


state 94

   82 relation_exp: not relation_exp1 .

    $default  reduce using rule 82 (relation_exp)


state 95

    6 add: ADD .

    $default  reduce using rule 6 (add)


state 96

   90 expression1: add . multiplicative_exp expression1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 89
    number              go to state 65
    var                 go to state 69
    multiplicative_exp  go to state 135
    term                go to state 75
    term1               go to state 76


state 97

   91 expression1: sub . multiplicative_exp expression1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 89
    number              go to state 65
    var                 go to state 69
    multiplicative_exp  go to state 136
    term                go to state 75
    term1               go to state 76


state 98

   88 expression: multiplicative_exp expression1 .

    $default  reduce using rule 88 (expression)


state 99

   39 or: OR .

    $default  reduce using rule 39 (or)


state 100

   98 bool_exp1: or . relation_n_exp bool_exp1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    FALSE    shift, and go to state 60
    TRUE     shift, and go to state 61
    NOT      shift, and go to state 62
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 64
    number              go to state 65
    not                 go to state 66
    true                go to state 67
    false               go to state 68
    var                 go to state 69
    multiplicative_exp  go to state 70
    relation_n_exp      go to state 137
    relation_exp        go to state 72
    relation_exp1       go to state 73
    expression          go to state 74
    term                go to state 75
    term1               go to state 76


state 101

   97 bool_exp: relation_n_exp bool_exp1 .

    $default  reduce using rule 97 (bool_exp)


state 102

   38 and: AND .

    $default  reduce using rule 38 (and)


state 103

   80 relation_n_exp1: and . relation_exp relation_n_exp1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    FALSE    shift, and go to state 60
    TRUE     shift, and go to state 61
    NOT      shift, and go to state 62
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 64
    number              go to state 65
    not                 go to state 66
    true                go to state 67
    false               go to state 68
    var                 go to state 69
    multiplicative_exp  go to state 70
    relation_exp        go to state 138
    relation_exp1       go to state 73
    expression          go to state 74
    term                go to state 75
    term1               go to state 76


state 104

   79 relation_n_exp: relation_exp relation_n_exp1 .

    $default  reduce using rule 79 (relation_n_exp)


state 105

   14 comp: GTE .

    $default  reduce using rule 14 (comp)


state 106

   13 comp: LTE .

    $default  reduce using rule 13 (comp)


state 107

   16 comp: GT .

    $default  reduce using rule 16 (comp)


state 108

   15 comp: LT .

    $default  reduce using rule 15 (comp)


state 109

   12 comp: NEQ .

    $default  reduce using rule 12 (comp)


state 110

   11 comp: EQ .

    $default  reduce using rule 11 (comp)


state 111

   84 relation_exp1: expression comp . expression

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 89
    number              go to state 65
    var                 go to state 69
    multiplicative_exp  go to state 70
    expression          go to state 139
    term                go to state 75
    term1               go to state 76


state 112

   10 mod: MOD .

    $default  reduce using rule 10 (mod)


state 113

    9 div: DIV .

    $default  reduce using rule 9 (div)


state 114

    8 mult: MULT .

    $default  reduce using rule 8 (mult)


state 115

   75 multiplicative_exp1: mult . term multiplicative_exp1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident    go to state 45
    sub      go to state 63
    l_paren  go to state 89
    number   go to state 65
    var      go to state 69
    term     go to state 140
    term1    go to state 76


state 116

   76 multiplicative_exp1: div . term multiplicative_exp1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident    go to state 45
    sub      go to state 63
    l_paren  go to state 89
    number   go to state 65
    var      go to state 69
    term     go to state 141
    term1    go to state 76


state 117

   77 multiplicative_exp1: mod . term multiplicative_exp1

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 36

    ident    go to state 45
    sub      go to state 63
    l_paren  go to state 89
    number   go to state 65
    var      go to state 69
    term     go to state 142
    term1    go to state 76


state 118

   74 multiplicative_exp: term multiplicative_exp1 .

    $default  reduce using rule 74 (multiplicative_exp)


state 119

   36 then: THEN .

    $default  reduce using rule 36 (then)


state 120

   55 statement: if bool_exp then . statement semicolon statement1 if_p endif

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    ident      go to state 45
    if         go to state 46
    while      go to state 47
    do         go to state 48
    continue   go to state 49
    read       go to state 50
    write      go to state 51
    statement  go to state 143
    var        go to state 53


state 121

   56 statement: while bool_exp beginloop . statement semicolon statement1 endloop

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    ident      go to state 45
    if         go to state 46
    while      go to state 47
    do         go to state 48
    continue   go to state 49
    read       go to state 50
    write      go to state 51
    statement  go to state 144
    var        go to state 53


state 122

   57 statement: do beginloop statement . semicolon statement1 endloop while bool_exp

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 145


state 123

   70 var_p: comma . var var_p

    IDENT  shift, and go to state 6

    ident  go to state 45
    var    go to state 146


state 124

   58 statement: read var var_p .

    $default  reduce using rule 58 (statement)


state 125

   59 statement: write var var_p .

    $default  reduce using rule 59 (statement)


state 126

   61 statement1: statement . semicolon statement1

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 147


state 127

   53 block2: begin_program statement semicolon statement1 .

    $default  reduce using rule 53 (block2)


state 128

   54 statement: var assign expression .

    $default  reduce using rule 54 (statement)


state 129

   34 of: OF .

    $default  reduce using rule 34 (of)


state 130

   67 dec2: array l_paren number r_paren of . integer

    error    shift, and go to state 24
    INTEGER  shift, and go to state 25

    integer  go to state 148


state 131

   94 term: l_paren expression . r_paren

    R_PAREN  shift, and go to state 87

    r_paren  go to state 133


state 132

   73 var: ident l_paren expression r_paren .

    $default  reduce using rule 73 (var)


state 133

   94 term: l_paren expression r_paren .

    $default  reduce using rule 94 (term)


state 134

   87 relation_exp1: l_paren bool_exp r_paren .

    $default  reduce using rule 87 (relation_exp1)


state 135

   90 expression1: add multiplicative_exp . expression1

    SUB  shift, and go to state 59
    ADD  shift, and go to state 95

    $default  reduce using rule 89 (expression1)

    add          go to state 96
    sub          go to state 97
    expression1  go to state 149


state 136

   91 expression1: sub multiplicative_exp . expression1

    SUB  shift, and go to state 59
    ADD  shift, and go to state 95

    $default  reduce using rule 89 (expression1)

    add          go to state 96
    sub          go to state 97
    expression1  go to state 150


state 137

   98 bool_exp1: or relation_n_exp . bool_exp1

    OR  shift, and go to state 99

    $default  reduce using rule 99 (bool_exp1)

    or         go to state 100
    bool_exp1  go to state 151


state 138

   80 relation_n_exp1: and relation_exp . relation_n_exp1

    AND  shift, and go to state 102

    $default  reduce using rule 81 (relation_n_exp1)

    and              go to state 103
    relation_n_exp1  go to state 152


state 139

   84 relation_exp1: expression comp expression .

    $default  reduce using rule 84 (relation_exp1)


state 140

   75 multiplicative_exp1: mult term . multiplicative_exp1

    MOD   shift, and go to state 112
    DIV   shift, and go to state 113
    MULT  shift, and go to state 114

    $default  reduce using rule 78 (multiplicative_exp1)

    mult                 go to state 115
    div                  go to state 116
    mod                  go to state 117
    multiplicative_exp1  go to state 153


state 141

   76 multiplicative_exp1: div term . multiplicative_exp1

    MOD   shift, and go to state 112
    DIV   shift, and go to state 113
    MULT  shift, and go to state 114

    $default  reduce using rule 78 (multiplicative_exp1)

    mult                 go to state 115
    div                  go to state 116
    mod                  go to state 117
    multiplicative_exp1  go to state 154


state 142

   77 multiplicative_exp1: mod term . multiplicative_exp1

    MOD   shift, and go to state 112
    DIV   shift, and go to state 113
    MULT  shift, and go to state 114

    $default  reduce using rule 78 (multiplicative_exp1)

    mult                 go to state 115
    div                  go to state 116
    mod                  go to state 117
    multiplicative_exp1  go to state 155


state 143

   55 statement: if bool_exp then statement . semicolon statement1 if_p endif

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 156


state 144

   56 statement: while bool_exp beginloop statement . semicolon statement1 endloop

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 157


state 145

   57 statement: do beginloop statement semicolon . statement1 endloop while bool_exp

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    $default  reduce using rule 62 (statement1)

    ident       go to state 45
    if          go to state 46
    while       go to state 47
    do          go to state 48
    continue    go to state 49
    read        go to state 50
    write       go to state 51
    statement   go to state 126
    statement1  go to state 158
    var         go to state 53


state 146

   70 var_p: comma var . var_p

    COMMA  shift, and go to state 15

    $default  reduce using rule 71 (var_p)

    comma  go to state 123
    var_p  go to state 159


state 147

   61 statement1: statement semicolon . statement1

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    $default  reduce using rule 62 (statement1)

    ident       go to state 45
    if          go to state 46
    while       go to state 47
    do          go to state 48
    continue    go to state 49
    read        go to state 50
    write       go to state 51
    statement   go to state 126
    statement1  go to state 160
    var         go to state 53


state 148

   67 dec2: array l_paren number r_paren of integer .

    $default  reduce using rule 67 (dec2)


state 149

   90 expression1: add multiplicative_exp expression1 .

    $default  reduce using rule 90 (expression1)


state 150

   91 expression1: sub multiplicative_exp expression1 .

    $default  reduce using rule 91 (expression1)


state 151

   98 bool_exp1: or relation_n_exp bool_exp1 .

    $default  reduce using rule 98 (bool_exp1)


state 152

   80 relation_n_exp1: and relation_exp relation_n_exp1 .

    $default  reduce using rule 80 (relation_n_exp1)


state 153

   75 multiplicative_exp1: mult term multiplicative_exp1 .

    $default  reduce using rule 75 (multiplicative_exp1)


state 154

   76 multiplicative_exp1: div term multiplicative_exp1 .

    $default  reduce using rule 76 (multiplicative_exp1)


state 155

   77 multiplicative_exp1: mod term multiplicative_exp1 .

    $default  reduce using rule 77 (multiplicative_exp1)


state 156

   55 statement: if bool_exp then statement semicolon . statement1 if_p endif

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    $default  reduce using rule 62 (statement1)

    ident       go to state 45
    if          go to state 46
    while       go to state 47
    do          go to state 48
    continue    go to state 49
    read        go to state 50
    write       go to state 51
    statement   go to state 126
    statement1  go to state 161
    var         go to state 53


state 157

   56 statement: while bool_exp beginloop statement semicolon . statement1 endloop

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    $default  reduce using rule 62 (statement1)

    ident       go to state 45
    if          go to state 46
    while       go to state 47
    do          go to state 48
    continue    go to state 49
    read        go to state 50
    write       go to state 51
    statement   go to state 126
    statement1  go to state 162
    var         go to state 53


state 158

   57 statement: do beginloop statement semicolon statement1 . endloop while bool_exp

    ENDLOOP  shift, and go to state 163

    endloop  go to state 164


state 159

   70 var_p: comma var var_p .

    $default  reduce using rule 70 (var_p)


state 160

   61 statement1: statement semicolon statement1 .

    $default  reduce using rule 61 (statement1)


state 161

   55 statement: if bool_exp then statement semicolon statement1 . if_p endif

    ELSE  shift, and go to state 165

    $default  reduce using rule 69 (if_p)

    else  go to state 166
    if_p  go to state 167


state 162

   56 statement: while bool_exp beginloop statement semicolon statement1 . endloop

    ENDLOOP  shift, and go to state 163

    endloop  go to state 168


state 163

   47 endloop: ENDLOOP .

    $default  reduce using rule 47 (endloop)


state 164

   57 statement: do beginloop statement semicolon statement1 endloop . while bool_exp

    WHILE  shift, and go to state 43

    while  go to state 169


state 165

   50 else: ELSE .

    $default  reduce using rule 50 (else)


state 166

   68 if_p: else . statement semicolon statement1

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    ident      go to state 45
    if         go to state 46
    while      go to state 47
    do         go to state 48
    continue   go to state 49
    read       go to state 50
    write      go to state 51
    statement  go to state 170
    var        go to state 53


state 167

   55 statement: if bool_exp then statement semicolon statement1 if_p . endif

    ENDIF  shift, and go to state 171

    endif  go to state 172


state 168

   56 statement: while bool_exp beginloop statement semicolon statement1 endloop .

    $default  reduce using rule 56 (statement)


state 169

   57 statement: do beginloop statement semicolon statement1 endloop while . bool_exp

    error    shift, and go to state 55
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 56
    SUB      shift, and go to state 59
    FALSE    shift, and go to state 60
    TRUE     shift, and go to state 61
    NOT      shift, and go to state 62
    L_PAREN  shift, and go to state 36

    ident               go to state 45
    sub                 go to state 63
    l_paren             go to state 64
    number              go to state 65
    not                 go to state 66
    true                go to state 67
    false               go to state 68
    var                 go to state 69
    multiplicative_exp  go to state 70
    relation_n_exp      go to state 71
    relation_exp        go to state 72
    relation_exp1       go to state 73
    expression          go to state 74
    term                go to state 75
    term1               go to state 76
    bool_exp            go to state 173


state 170

   68 if_p: else statement . semicolon statement1

    error      shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    semicolon  go to state 174


state 171

   37 endif: ENDIF .

    $default  reduce using rule 37 (endif)


state 172

   55 statement: if bool_exp then statement semicolon statement1 if_p endif .

    $default  reduce using rule 55 (statement)


state 173

   57 statement: do beginloop statement semicolon statement1 endloop while bool_exp .

    $default  reduce using rule 57 (statement)


state 174

   68 if_p: else statement semicolon . statement1

    IDENT     shift, and go to state 6
    WRITE     shift, and go to state 39
    READ      shift, and go to state 40
    CONTINUE  shift, and go to state 41
    DO        shift, and go to state 42
    WHILE     shift, and go to state 43
    IF        shift, and go to state 44

    $default  reduce using rule 62 (statement1)

    ident       go to state 45
    if          go to state 46
    while       go to state 47
    do          go to state 48
    continue    go to state 49
    read        go to state 50
    write       go to state 51
    statement   go to state 126
    statement1  go to state 175
    var         go to state 53


state 175

   68 if_p: else statement semicolon statement1 .

    $default  reduce using rule 68 (if_p)
